---
const { tour, t } = Astro.props;
if (!tour) {
  // No renderizar nada si el tour no está definido
  return null;
}
const { name, duration, description, includes, image } = tour;
const whatsappLink = `https://wa.me/51984302905?text=Hola, me gustaría reservar el tour: ${name}`;
---


  <div class="tour-card-carousel bg-white/30 backdrop-blur-md rounded-md p-4 flex flex-col h-full text-stone-800 shadow-inner overflow-hidden border border-solid border-white/40">
    <img src={image} alt={name} class="w-full h-32 object-cover rounded-md mb-3" loading="lazy" />
    <h3 class="text-xl font-bold text-stone-900 mb-2">{name}</h3>
    <p class="text-sm text-stone-700 mb-4 flex items-center">
      <span class="material-symbols-outlined mr-2 text-base">schedule</span>
      {duration}
    </p>
    <div class="text-sm text-stone-700 mb-4 flex-grow">
      <p>{description}</p>
    </div>

    <!-- Botón para expandir -->
    <button class="expand-button mt-auto mb-3 text-sm font-semibold text-stone-600 hover:text-stone-900 transition-colors flex items-center justify-center">
      {t('card.moreInfo')}
      <span class="material-symbols-outlined ml-1 icon-plus">add_circle</span>
      <span class="material-symbols-outlined ml-1 icon-minus hidden">remove_circle</span>
    </button>

    <!-- Contenido expandible -->
    <div class="expandable-content max-h-0 overflow-hidden transition-all duration-500 ease-in-out">
      <div class="pt-2 pb-4 border-t border-stone-300/50">
        <h4 class="font-semibold text-stone-900 mb-2">{t('card.includes')}:</h4>
        <ul class="list-disc list-inside text-sm text-stone-700 space-y-1">
          {includes && includes.map((item) => (
            <li>{item}</li>
          ))}
        </ul>
      </div>
    </div>

    <a href={whatsappLink} target="_blank" rel="noopener noreferrer" class="mt-auto bg-[#d2a530] text-white font-bold py-2 px-4 rounded-md hover:bg-[#b88a2a] transition-colors text-center w-full block">
      {t('card.bookNow')}
    </a>
  </div>

<script>
  document.querySelectorAll('.tour-card-carousel').forEach(card => {
    const button = card.querySelector('.expand-button');
    const content = card.querySelector('.expandable-content');
    const iconPlus = card.querySelector('.icon-plus');
    const iconMinus = card.querySelector('.icon-minus');

    if (button && content) {
      button.addEventListener('click', () => {
        const isOpen = content.classList.toggle('is-open');
        
        if (isOpen) {
          content.style.maxHeight = content.scrollHeight + "px";
          iconPlus.classList.add('hidden');
          iconMinus.classList.remove('hidden');
        } else {
          content.style.maxHeight = "0";
          iconPlus.classList.remove('hidden');
          iconMinus.classList.add('hidden');
        }
      });
    }
  });
</script>
