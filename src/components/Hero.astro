---
const { t, tours } = Astro.props;
import ToursCarousel from '../components/ToursCarousel.astro';
import TourCard from '../components/TourCard.astro';
import AboutCard from '../components/AboutCard.astro';

---

<!-- Hero -->
<section id="inicio" class="relative w-full h-screen flex items-center justify-center overflow-hidden">
  <!-- Pantalla de carga para el video -->
  <div id="video-preloader" class="fixed inset-0 z-30 flex items-center justify-center bg-orange-50 transition-opacity duration-500 ease-in-out">
    <img src="/assets/images/logoInkasTravel.png" alt="Cargando..." class="w-32 animate-pulse" />
  </div>

  <!-- Video de fondo fijo -->
  <video
    id="hero-video"
    class="fixed inset-0 w-full h-screen object-cover z-0"
    src="/assets/videos/hero-video-portada-2mb.mp4"
    preload="auto"
    playsinline
    muted
    style="pointer-events: none;"
  ></video>
  <!-- Frase centrada -->
  <div class="relative z-20 flex flex-col items-center justify-center text-center px-4">
    <h1 
      id="hero-title"
      class="text-[#372212] uppercase text-3xl sm:text-5xl font-extrabold leading-relaxed drop-shadow-lg opacity-0 translate-y-4 transition-all duration-[2000ms] ease-out"
    >
      {t('hero.title_line1')} <span class="text-[#d2a530]">{t('hero.title_line2')}</span>
    </h1>
    <p id="hero-subtitle" class="text-xl sm:text-3xl text-stone-700 font-semibold mt-4 opacity-0 translate-y-4 transition-all duration-[2000ms] ease-out delay-[500ms]">
      {t('hero.subtitle')}
    </p>
    <a
      id="hero-button"
      href="https://wa.me/51984302905?text=Hola%2C%20me%20gustar%C3%ADa%20obtener%20ayuda%20para%20planificar%20mi%20viaje."
      target="_blank"
      rel="noopener noreferrer"
      class="glassmorphism text-[#372212] font-bold py-3 px-6 rounded-lg mt-12 inline-block hover:bg-white/20 transition-all duration-300 opacity-0 translate-y-4 ease-out delay-[1000ms]"
      style="transition-duration: 2000ms;"
    >
      {t('hero.unlock_trip_planning')}
    </a>
  </div>
</section>

<div class="h-24"></div>

<!-- Sección Tours -->
<section id="tours" class="relative z-30 glassmorphism py-16 px-4 md:px-8 lg:px-16">
  <div class="container mx-auto">
    <h2 class="text-4xl font-bold text-center mb-12 drop-shadow-lg" style="color: #3d1f14 !important;">{t('tours.title')}</h2>

    <!-- Grid para Desktop -->
    <div class="hidden md:grid md:grid-cols-3 lg:grid-cols-4 gap-8">
      {tours.map(tour => (
        <TourCard tour={tour} t={t} />
      ))}
    </div>

    <!-- Carousel para Móvil -->
    <div class="md:hidden">
      <ToursCarousel tours={tours} t={t} />
    </div>
  </div>
</section>

<div class="h-24"></div>

<!-- Sección Nosotros -->
<section id="nosotros" class="relative z-30 glassmorphism py-16 px-4 md:px-8 lg:px-16">
  <div class="container mx-auto">
    <AboutCard t={t} />
  </div>
</section>

<div class="h-24"></div>

<!-- Cards -->
<section id="destacados" class="relative z-30 bg-gray-50 py-20">
  <div class="max-w-6xl mx-auto px-4">
    <h2 class="text-2xl sm:text-4xl font-bold text-center mb-12 text-green-800">Nuestros tours destacados</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
      <!-- Card 1 -->
      <div class="relative rounded-xl shadow-lg overflow-hidden flex flex-col items-center justify-end min-h-[350px]">
        <video class="absolute inset-0 w-full h-full object-cover z-0 card-video" src="/assets/videos/hero-video.mp4" loop muted playsinline></video>
        <div class="absolute inset-0 bg-black/40 z-10"></div>
        <div class="relative z-20 p-6 flex flex-col items-center">
          <img src="/assets/images/logoInkasTravel.jpg" alt="Cusco Mágico" class="w-20 h-20 rounded-full object-cover mb-4 border-2 border-green-800 bg-white/80">
          <h3 class="text-xl font-semibold text-white mb-2">Cusco Mágico</h3>
          <p class="text-gray-100 text-center mb-4">Descubre la ciudad imperial y sus maravillas con guías locales apasionados.</p>
          <button class="bg-green-800 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition">Ver más</button>
        </div>
      </div>
      <!-- Card 2 -->
      <div class="relative rounded-xl shadow-lg overflow-hidden flex flex-col items-center justify-end min-h-[350px]">
        <video class="absolute inset-0 w-full h-full object-cover z-0 card-video" src="/assets/videos/hero-video2.mp4" loop muted playsinline></video>
        <div class="absolute inset-0 bg-black/40 z-10"></div>
        <div class="relative z-20 p-6 flex flex-col items-center">
          <img src="/assets/images/logo1.JPG" alt="Aventura Andina" class="w-20 h-20 rounded-full object-cover mb-4 border-2 border-orange-500 bg-white/80">
          <h3 class="text-xl font-semibold text-white mb-2">Aventura Andina</h3>
          <p class="text-gray-100 text-center mb-4">Trekking, cultura y paisajes únicos en rutas poco exploradas de los Andes.</p>
          <button class="bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-400 transition">Ver más</button>
        </div>
      </div>
      <!-- Card 3: Montaña de Siete Colores -->
      <div class="relative rounded-xl shadow-lg overflow-hidden flex flex-col items-center justify-end min-h-[350px]">
        <video class="absolute inset-0 w-full h-full object-cover z-0 card-video" src="/assets/videos/video7colores.mp4" loop muted playsinline></video>
        <div class="absolute inset-0 bg-black/40 z-10"></div>
        <div class="relative z-20 p-6 flex flex-col items-center">
          <img src="/assets/images/logo.png" alt="Montaña de Siete Colores" class="w-20 h-20 rounded-full object-cover mb-4 border-2 border-yellow-400 bg-white/80">
          <h3 class="text-xl font-semibold text-yellow-600 mb-2">Montaña de Siete Colores</h3>
          <p class="text-gray-100 text-center mb-4">Vive la experiencia única de la Vinicunca con guías locales expertos.</p>
          <button class="bg-yellow-400 text-white px-4 py-2 rounded-lg hover:bg-yellow-300 transition">Ver más</button>
        </div>
      </div>
    </div>
  </div>
</section>

<script is:inline>
  window.addEventListener('DOMContentLoaded', () => {
    const heroTitle = document.getElementById('hero-title');
    const heroSubtitle = document.getElementById('hero-subtitle');
    const heroButton = document.getElementById('hero-button');
    const preloader = document.getElementById('video-preloader');
    const heroVideo = document.getElementById('hero-video');

    // Animación de entrada y preloader
    if (heroVideo && preloader && heroTitle && heroSubtitle && heroButton) {
      let shown = false;
      const showContent = () => {
        if (shown) return;
        shown = true;
        // Acelera el video durante 200ms
        heroVideo.playbackRate = 2.5;
        setTimeout(() => { heroVideo.playbackRate = 1; }, 200);
        heroVideo.play();
        preloader.classList.add('opacity-0');
        setTimeout(() => { preloader.style.display = 'none'; }, 500);
        setTimeout(() => {
          heroTitle.classList.remove('opacity-0', 'translate-y-4');
          heroSubtitle.classList.remove('opacity-0', 'translate-y-4');
          heroButton.classList.remove('opacity-0', 'translate-y-4');
        }, 2000);
      };
      heroVideo.addEventListener('canplay', showContent, { once: true });
      setTimeout(showContent, 4000);
    }

    // Videos en cards: reproducción solo en hover (desktop) o visibilidad (móvil)
    const cardVideos = document.querySelectorAll('.card-video');
    cardVideos.forEach(video => { video.muted = true; }); // Forzar muted por compatibilidad
    const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    if (isTouch && 'IntersectionObserver' in window) {
      // Móvil: reproducir solo si el video está visible (al centro)
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          const video = entry.target;
          if (!video.__userPlayed && entry.isIntersecting) {
            // No reproducir automáticamente, esperar interacción
            video.pause();
          }
          if (!entry.isIntersecting) {
            video.pause();
            video.__userPlayed = false;
          }
        });
      }, { threshold: 0.5 });
      cardVideos.forEach(video => {
        video.pause();
        observer.observe(video);
        // Fallback: reproducir al tocar cualquier parte de la card
        const card = video.closest('.relative');
        if (card) {
          card.addEventListener('touchstart', () => {
            video.__userPlayed = true;
            video.play().catch(() => {});
          });
        } else {
          video.addEventListener('touchstart', () => {
            video.__userPlayed = true;
            video.play().catch(() => {});
          });
        }
      });
    } else {
      // Desktop: reproducir solo en hover sobre la card (no solo el video)
      cardVideos.forEach(video => {
        video.pause();
        const card = video.closest('.relative');
        if (card) {
          card.addEventListener('mouseenter', () => {
            video.play().catch(() => {});
          });
          card.addEventListener('mouseleave', () => {
            video.pause();
          });
        } else {
          // Fallback: listeners en el video
          video.addEventListener('mouseenter', () => {
            video.play().catch(() => {});
          });
          video.addEventListener('mouseleave', () => {
            video.pause();
          });
        }
      });
    }

    // Scroll automático al detectar interacción SOLO si estamos cerca del hero
    let scrollTriggered = false;
    const scrollToTours = () => {
      if (scrollTriggered) return;
      // Solo activar si el usuario está cerca del top (hero)
      if (window.scrollY > 200) return;
      scrollTriggered = true;
      const toursSection = document.getElementById('tours');
      if (toursSection) {
        const y = toursSection.getBoundingClientRect().top + window.scrollY - 24;
        window.scrollTo({ top: y, behavior: 'smooth' });
      }
    };
    window.addEventListener('touchstart', scrollToTours, { once: true });
    window.addEventListener('wheel', scrollToTours, { once: true });
    window.addEventListener('keydown', (e) => {
      if ([32, 33, 34, 35, 36, 38, 40].includes(e.keyCode)) scrollToTours();
    }, { once: true });
  });
</script>