---
// src/components/Header.astro
const { lang = 'es', t } = Astro.props;
const oppositeLang = lang === 'es' ? 'en' : 'es';

// Genera la URL para el idioma alternativo.
// Si estamos en 'es' (ej: / o /nosotros), el enlace será a '/en' o '/en/nosotros'.
// Si estamos en 'en' (ej: /en o /en/nosotros), el enlace será a '/' o '/nosotros'.
let switchTo;
if (lang === 'es') {
  const path = Astro.url.pathname === '/' ? '' : Astro.url.pathname;
  switchTo = `/en${path}`;
} else {
  switchTo = Astro.url.pathname.replace(/^\/en/, '') || '/';
}
---

<header id="main-header" data-lang={lang} class="fixed top-0 left-0 w-full z-50 flex justify-between items-center h-16 px-6 sm:px-8 transition-transform duration-300 ease-in-out">
  <!-- Logo a la izquierda -->
  <a href="/" class="flex items-center z-10">
    <img src="/assets/images/logoInkasTravel.png" alt="Logo" class="w-14 md:w-20 h-auto transition-all duration-300 ease-in-out" />
  </a>

  <!-- Contenedor del menú a la derecha -->
  <div class="flex items-center gap-x-4">
    <!-- Menú de escritorio (ovalado) - Oculto en móvil -->
    <div class="hidden md:flex">
      <nav 
        id="menu-container" 
        class="flex items-center gap-x-4 sm:gap-x-8 px-4 sm:px-6 py-2 border rounded-full transition-all duration-300 ease-in-out bg-[#372212] border-[#d2a530]"
      >
        <a href="#inicio" class="text-stone-200 text-sm sm:text-base font-medium hover:text-[#d2a530] transition-colors duration-300">{t('nav.home')}</a>
        <a href="#nosotros" class="text-stone-200 text-sm sm:text-base font-medium hover:text-[#d2a530] transition-colors duration-300">{t('nav.about')}</a>
        <a href="#viajes" class="text-stone-200 text-sm sm:text-base font-medium hover:text-[#d2a530] transition-colors duration-300">{t('nav.trips')}</a>
        <a href="#destacados" class="text-stone-200 text-sm sm:text-base font-medium hover:text-[#d2a530] transition-colors duration-300">{t('nav.featured')}</a>
      </nav>
    </div>

    <!-- Selector de idioma (escritorio) -->
    <div class="hidden md:flex items-center">
      <a href={switchTo} id="lang-toggle-desktop" class="flex items-center gap-x-2 bg-[#372212] border border-[#d2a530] text-[#d2a530] rounded-full px-3 py-1.5 text-sm font-medium hover:bg-[#d2a530] hover:text-[#372212] transition-colors duration-300" aria-label={`Cambiar a ${oppositeLang === 'es' ? 'Español' : 'English'}`}>
        <span class="material-symbols-outlined !text-lg">
          language
        </span>
        <span class="uppercase">{oppositeLang}</span>
      </a>
    </div>

    <!-- Botón de hamburguesa para móvil - Oculto en escritorio -->
    <div class="md:hidden flex items-center gap-x-3">
      <!-- Selector de idioma (móvil) -->
      <a href={switchTo} id="lang-toggle-mobile" class="flex items-center gap-x-1 bg-[#372212] border border-[#d2a530] text-[#d2a530] rounded-full px-2 py-0.5 text-xs font-medium hover:bg-[#d2a530] hover:text-[#372212] transition-colors duration-300" aria-label={`Cambiar a ${oppositeLang === 'es' ? 'Español' : 'English'}`}>
        <span class="material-symbols-outlined !text-sm">
          language
        </span>
        <span class="uppercase">{oppositeLang}</span>
      </a>

      <button id="menu-btn" class="text-[#d2a530] focus:outline-none" aria-label="Abrir menú">
        <svg id="icon-hamburger" class="h-8 w-8 block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        <svg id="icon-close" class="h-8 w-8 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>
</header>

<!-- Overlay y Menú móvil que sale desde abajo -->
<div id="mobile-overlay" class="fixed inset-0 bg-black/40 z-40 hidden"></div>
<div id="mobile-menu" class="md:hidden fixed left-0 right-0 bottom-0 bg-[#372212]/95 backdrop-blur-lg rounded-t-2xl shadow-lg z-50 p-4 transform translate-y-full transition-transform duration-300 ease-in-out">
  <div class="w-12 h-1.5 bg-[#d2a530]/50 rounded-full mx-auto mb-6"></div>
  <a href="#inicio" class="block text-center py-3 text-[#d2a530] text-lg font-bold rounded-lg hover:bg-white/10 transition-colors duration-300">{t('nav.home')}</a>
  <a href="#nosotros" class="block text-center py-3 text-[#d2a530] text-lg font-bold rounded-lg hover:bg-white/10 transition-colors duration-300">{t('nav.about')}</a>
  <a href="#viajes" class="block text-center py-3 text-[#d2a530] text-lg font-bold rounded-lg hover:bg-white/10 transition-colors duration-300">{t('nav.trips')}</a>
  <a href="#destacados" class="block text-center py-3 text-[#d2a530] text-lg font-bold rounded-lg hover:bg-white/10 transition-colors duration-300">{t('nav.featured')}</a>
</div>

<script is:inline>
  // --- Elementos del DOM ---
  const mainHeader = document.getElementById('main-header');
  const btn = document.getElementById('menu-btn'); // Botón de hamburguesa
  const menu = document.getElementById('mobile-menu'); // Panel del menú móvil
  const overlay = document.getElementById('mobile-overlay'); // Fondo oscuro
  const iconHamburger = document.getElementById('icon-hamburger');
  const iconClose = document.getElementById('icon-close');
  
  // --- Elementos para el indicador de sección activa ---
  const desktopLinks = document.querySelectorAll('#menu-container a');
  const mobileMenuLinks = document.querySelectorAll('#mobile-menu a');
  const allLinks = [...desktopLinks, ...mobileMenuLinks];
  // Obtenemos las secciones a partir de los enlaces del menú
  const sections = Array.from(desktopLinks)
    .map(link => {
      const href = link.getAttribute('href');
      // Nos aseguramos de que es un ancla interna
      return href.startsWith('#') ? document.querySelector(href) : null;
    })
    .filter(section => section); // Filtramos nulos si algún enlace no va a una sección

  // --- Estado ---
  let lastScrollY = window.scrollY;
  // --- Lógica de Scroll ---
  const handleScroll = () => {
    // Cierra el menú móvil si está abierto y el usuario empieza a hacer scroll
    if (!menu.classList.contains('translate-y-full')) {
      closeMenu();
      return; // Evita que se ejecute el resto de la lógica de scroll
    }

    const currentScrollY = window.scrollY;

    // 1. Ocultar/mostrar header al hacer scroll
    // Se oculta al bajar, se muestra al subir (y no está en la parte superior)
    if (currentScrollY > lastScrollY && currentScrollY > 100) {
      mainHeader.classList.add('-translate-y-full');
    } else if (currentScrollY < lastScrollY) {
      mainHeader.classList.remove('-translate-y-full');
    }
    lastScrollY = currentScrollY;

    // 2. Actualizar el indicador de sección activa
    updateActiveLink();
  };

  const updateActiveLink = () => {
    if (sections.length === 0) return;

    const scrollY = window.scrollY;
    // Un desplazamiento para que la sección se marque como activa un poco antes de llegar al borde superior.
    // Usamos la altura del header como referencia + un margen.
    const headerOffset = mainHeader.offsetHeight + 40; 

    let currentSectionId = sections.length > 0 ? sections[0].id : '';

    // Encontramos la última sección cuya parte superior ya hemos pasado
    sections.forEach(section => {
      const sectionTop = section.offsetTop - headerOffset;
      if (scrollY >= sectionTop) {
        currentSectionId = section.id;
      }
    });

    // Aplicamos los estilos a todos los enlaces (móvil y escritorio)
    allLinks.forEach(link => {
      const linkSectionId = link.getAttribute('href').substring(1);

      if (linkSectionId === currentSectionId) {
        // Es el enlace activo
        if (link.closest('#menu-container')) { // Enlace de escritorio
          link.classList.remove('text-stone-200');
          link.classList.add('text-[#d2a530]');
        } else { // Enlace móvil
          link.classList.add('bg-white/10');
        }
      } else {
        // No es el enlace activo
        if (link.closest('#menu-container')) { // Enlace de escritorio
          link.classList.remove('text-[#d2a530]');
          link.classList.add('text-stone-200');
        } else { // Enlace móvil
          link.classList.remove('bg-white/10');
        }
      }
    });
  };

  // --- Lógica del Menú Móvil ---
  function openMenu() {
    menu.classList.remove('translate-y-full');
    overlay.classList.remove('hidden');
    iconHamburger.classList.add('hidden');
    iconClose.classList.remove('hidden');
    document.body.style.overflow = 'hidden'; // Bloquear scroll del fondo
  }

  function closeMenu() {
    menu.classList.add('translate-y-full');
    overlay.classList.add('hidden');
    iconHamburger.classList.remove('hidden');
    iconClose.classList.add('hidden');
    document.body.style.overflow = ''; // Restaurar scroll del fondo
  }

  // --- Event Listeners ---
  window.addEventListener('scroll', handleScroll);

  btn?.addEventListener('click', () => {
    if (menu.classList.contains('translate-y-full')) {
      openMenu();
    } else {
      closeMenu();
    }
  });

  overlay?.addEventListener('click', closeMenu); // Cierra al hacer clic fuera
  mobileMenuLinks.forEach(link => {
    link.addEventListener('click', closeMenu); // Cierra al hacer clic en un enlace
  });

  // Estado inicial al cargar la página
  window.addEventListener('load', handleScroll); // Usamos 'load' para asegurar que las alturas de las secciones son correctas
</script>
