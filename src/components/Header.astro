---
// src/components/Header.astro
const { lang = 'es', t } = Astro.props;
const oppositeLang = lang === 'es' ? 'en' : 'es';

let switchTo;
const path = Astro.url.pathname;
const cleanPath = path
  .replace(/^\/en\//, '/')
  .replace(/^\/es\//, '/')
  .replace(/^\/en/, '')
  .replace(/^\/es/, '');

// Lógica mejorada para tours dinámicos
const isTourDetailEs = /^\/es\/tours\/([^\/]+)$/.test(path);
const isTourDetailEn = /^\/tours\/([^\/]+)$/.test(path);

if (isTourDetailEs || isTourDetailEn) {
  // Extraer slug
  const slug = path.split('/').pop();
  let existsInOtherLang = false;
  if (lang === 'es') {
    // Verificar si el slug existe en inglés
    try {
      const toursEn = await import('../data/tours.en.json');
      existsInOtherLang = toursEn.default.some(t => t.slug === slug);
    } catch {}
    switchTo = existsInOtherLang ? `/en/tours/${slug}` : '/en/tours';
  } else {
    // Verificar si el slug existe en español
    try {
      const toursEs = await import('../data/tours.es.json');
      existsInOtherLang = toursEs.default.some(t => t.slug === slug);
    } catch {}
    switchTo = existsInOtherLang ? `/es/tours/${slug}` : '/es/tours';
  }
} else {
  // Para cualquier otra ruta, limpiar prefijos y anteponer el correcto
  if (oppositeLang === 'en') {
    switchTo = `/en${cleanPath === '/' ? '' : cleanPath}`;
  } else {
    switchTo = `/es${cleanPath === '/' ? '' : cleanPath}`;
  }
}

// Generador de enlaces de sección para el menú
function sectionLink(section) {
  if (section === 'tours') {
    return lang === 'es' ? '/es/tours' : '/tours';
  }
  return lang === 'es' ? `/es/#${section}` : `/#${section}`;
}
---

<header id="main-header" data-lang={lang} class="fixed top-0 left-0 w-full z-50 flex items-center h-16 px-6 sm:px-8 bg-transparent border-none shadow-none">
  <!-- Logo a la izquierda -->
  <div class="flex items-center justify-start min-w-0">
    <a href={lang === 'es' ? '/es/' : '/'} class="flex items-center z-10">
      <img src="/assets/images/logoInkasTravel.png" alt="Logo" class="w-14 md:w-20 h-auto transition-all duration-300 ease-in-out drop-shadow-xl hover:scale-105 hover:drop-shadow-2xl focus:scale-105" />
    </a>
  </div>
  <!-- Menú y selector de idioma a la derecha (desktop) -->
  <div class="hidden md:flex flex-1 min-w-0 items-center justify-end gap-x-6">
    <nav 
      id="menu-container" 
      class="flex items-center gap-x-6 px-2 sm:px-4 py-2 transition-all duration-300 ease-in-out bg-transparent border-none shadow-none"
    >
      <a href={sectionLink('inicio')} class="menu-link text-lg sm:text-xl font-extrabold px-2 py-1 transition-all duration-300 drop-shadow-md">{t('nav.home')}</a>
      <a href={sectionLink('nosotros')} class="menu-link text-lg sm:text-xl font-extrabold px-2 py-1 transition-all duration-300 drop-shadow-md">{t('nav.about')}</a>
      <a href={sectionLink('tours')} class="menu-link text-lg sm:text-xl font-extrabold px-2 py-1 transition-all duration-300 drop-shadow-md">{t('nav.tours')}</a>
      <a href={sectionLink('destacados')} class="menu-link text-lg sm:text-xl font-extrabold px-2 py-1 transition-all duration-300 drop-shadow-md">{t('nav.featured')}</a>
    </nav>
    <!-- Selector de idioma (escritorio) -->
    <div class="flex items-center">
      <a href={switchTo} id="lang-toggle-desktop" class="flex items-center gap-x-2 rounded-full px-3 py-1.5 text-sm font-bold transition-all duration-300 glassmorphism-lang bg-gradient-to-r from-[#ffe082]/80 to-[#fffde7]/80 text-[#372212] shadow-md hover:from-[#fffde7] hover:to-[#ffe082] hover:scale-105 focus:scale-105 border border-[#ffe082]/60" aria-label={`Cambiar a ${oppositeLang === 'es' ? 'Español' : 'English'}`} onclick="event.preventDefault(); window.location.href=this.href;">
        <span class="material-symbols-outlined !text-lg">
          language
        </span>
        <span class="uppercase">{oppositeLang}</span>
      </a>
    </div>
  </div>
  <!-- Menú móvil y selector de idioma móvil a la derecha -->
  <div class="md:hidden flex flex-1 min-w-0 items-center justify-end gap-x-4">
    <!-- Selector de idioma (escritorio) -->
    <div class="hidden md:flex items-center">
      <a href={switchTo} id="lang-toggle-desktop" class="flex items-center gap-x-2 rounded-full px-3 py-1.5 text-sm font-bold transition-all duration-300 glassmorphism-lang bg-gradient-to-r from-[#ffe082]/80 to-[#fffde7]/80 text-[#372212] shadow-md hover:from-[#fffde7] hover:to-[#ffe082] hover:scale-105 focus:scale-105 border border-[#ffe082]/60" aria-label={`Cambiar a ${oppositeLang === 'es' ? 'Español' : 'English'}`} onclick="event.preventDefault(); window.location.href=this.href;">
        <span class="material-symbols-outlined !text-lg">
          language
        </span>
        <span class="uppercase">{oppositeLang}</span>
      </a>
    </div>
    <!-- Botón de hamburguesa para móvil - Oculto en escritorio -->
    <div class="md:hidden flex items-center gap-x-3">
      <!-- Selector de idioma (móvil) -->
      <a href={switchTo} id="lang-toggle-mobile" class="flex items-center gap-x-1 rounded-full px-2 py-0.5 text-xs font-bold transition-all duration-300 glassmorphism-lang bg-gradient-to-r from-[#ffe082]/80 to-[#fffde7]/80 text-[#372212] shadow-md hover:from-[#fffde7] hover:to-[#ffe082] hover:scale-105 focus:scale-105 border border-[#ffe082]/60" aria-label={`Cambiar a ${oppositeLang === 'es' ? 'Español' : 'English'}`} onclick="event.preventDefault(); window.location.href=this.href;">
        <span class="material-symbols-outlined !text-sm">
          language
        </span>
        <span class="uppercase">{oppositeLang}</span>
      </a>
      <button id="menu-btn" class="text-[#372212] focus:outline-none hover:scale-110 transition-transform duration-200" aria-label="Abrir menú">
        <svg id="icon-hamburger" class="h-8 w-8 block" fill="none" stroke="#372212" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        <svg id="icon-close" class="h-8 w-8 hidden" fill="none" stroke="#372212" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>
</header>
</header>

<!-- Overlay y Menú móvil que sale desde abajo -->
<div id="mobile-overlay" class="fixed inset-0 bg-black/40 z-40 hidden"></div>
<div id="mobile-menu" class="md:hidden fixed left-0 right-0 bottom-0 rounded-t-2xl shadow-2xl z-50 p-4 transform translate-y-full transition-transform duration-300 ease-in-out glassmorphism-menu bg-transparent dark:bg-transparent backdrop-blur-xl border-t border-[#e5e7eb]/60 dark:border-[#222]/60">
  <div class="w-12 h-1.5 bg-[#d2a530]/50 rounded-full mx-auto mb-6"></div>
  <a href={sectionLink('inicio')} class="block text-center py-3 text-[#a67c00] text-lg font-bold rounded-xl hover:bg-[#fffbe6] hover:text-[#a67c00] focus:bg-[#fffbe6] focus:text-[#a67c00] transition-all duration-300">{t('nav.home')}</a>
  <a href={sectionLink('nosotros')} class="block text-center py-3 text-[#a67c00] text-lg font-bold rounded-xl hover:bg-[#fffbe6] hover:text-[#a67c00] focus:bg-[#fffbe6] focus:text-[#a67c00] transition-all duration-300">{t('nav.about')}</a>
  <a href={sectionLink('tours')} class="block text-center py-3 text-[#a67c00] text-lg font-bold rounded-xl hover:bg-[#fffbe6] hover:text-[#a67c00] focus:bg-[#fffbe6] focus:text-[#a67c00] transition-all duration-300">{t('nav.tours')}</a>
  <a href={sectionLink('destacados')} class="block text-center py-3 text-[#a67c00] text-lg font-bold rounded-xl hover:bg-[#fffbe6] hover:text-[#a67c00] focus:bg-[#fffbe6] focus:text-[#a67c00] transition-all duration-300">{t('nav.featured')}</a>
</div>

<script is:inline>
  // --- Elementos del DOM ---
  const mainHeader = document.getElementById('main-header');
  const btn = document.getElementById('menu-btn'); // Botón de hamburguesa
  const menu = document.getElementById('mobile-menu'); // Panel del menú móvil
  const overlay = document.getElementById('mobile-overlay'); // Fondo oscuro
  const iconHamburger = document.getElementById('icon-hamburger');
  const iconClose = document.getElementById('icon-close');
  
  // --- Elementos para el indicador de sección activa ---
  const desktopLinks = document.querySelectorAll('#menu-container a');
  const mobileMenuLinks = document.querySelectorAll('#mobile-menu a');
  const allLinks = [...desktopLinks, ...mobileMenuLinks];
  // Obtenemos las secciones a partir de los enlaces del menú
  const sections = Array.from(desktopLinks)
    .map(link => {
      const href = link.getAttribute('href');
      // Nos aseguramos de que es un ancla interna
      return href.startsWith('#') ? document.querySelector(href) : null;
    })
    .filter(section => section); // Filtramos nulos si algún enlace no va a una sección

  // --- Estado ---
  let lastScrollY = window.scrollY;
  // --- Lógica de Scroll ---
  const handleScroll = () => {
    // Cierra el menú móvil si está abierto y el usuario empieza a hacer scroll
    if (!menu.classList.contains('translate-y-full')) {
      closeMenu();
      return; // Evita que se ejecute el resto de la lógica de scroll
    }

    const currentScrollY = window.scrollY;

    // 1. Ocultar/mostrar header al hacer scroll
    // Se oculta al bajar, se muestra al subir (y no está en la parte superior)
    if (currentScrollY > lastScrollY && currentScrollY > 100) {
      mainHeader.classList.add('-translate-y-full');
    } else if (currentScrollY < lastScrollY) {
      mainHeader.classList.remove('-translate-y-full');
    }
    lastScrollY = currentScrollY;

    // 2. Actualizar el indicador de sección activa
    updateActiveLink();
  };

  const updateActiveLink = () => {
    if (sections.length === 0) return;

    const scrollY = window.scrollY;
    // Un desplazamiento para que la sección se marque como activa un poco antes de llegar al borde superior.
    // Usamos la altura del header como referencia + un margen.
    const headerOffset = mainHeader.offsetHeight + 40; 

    let currentSectionId = sections.length > 0 ? sections[0].id : '';

    // Encontramos la última sección cuya parte superior ya hemos pasado
    sections.forEach(section => {
      const sectionTop = section.offsetTop - headerOffset;
      if (scrollY >= sectionTop) {
        currentSectionId = section.id;
      }
    });

    // Aplicamos los estilos a todos los enlaces (móvil y escritorio)
    allLinks.forEach(link => {
      const linkSectionId = link.getAttribute('href').substring(1);

      if (linkSectionId === currentSectionId) {
        // Es el enlace activo
        if (link.closest('#menu-container')) { // Enlace de escritorio
          link.classList.remove('text-stone-200');
          link.classList.add('text-[#d2a530]');
        } else { // Enlace móvil
          link.classList.add('bg-white/10');
        }
      } else {
        // No es el enlace activo
        if (link.closest('#menu-container')) { // Enlace de escritorio
          link.classList.remove('text-[#d2a530]');
          link.classList.add('text-stone-200');
        } else { // Enlace móvil
          link.classList.remove('bg-white/10');
        }
      }
    });
  };

  // --- Lógica del Menú Móvil ---
  function openMenu() {
    menu.classList.remove('translate-y-full');
    overlay.classList.remove('hidden');
    iconHamburger.classList.add('hidden');
    iconClose.classList.remove('hidden');
    document.body.style.overflow = 'hidden'; // Bloquear scroll del fondo
  }

  function closeMenu() {
    menu.classList.add('translate-y-full');
    overlay.classList.add('hidden');
    iconHamburger.classList.remove('hidden');
    iconClose.classList.add('hidden');
    document.body.style.overflow = ''; // Restaurar scroll del fondo
  }

  // --- Event Listeners ---
  window.addEventListener('scroll', handleScroll);

  btn?.addEventListener('click', () => {
    if (menu.classList.contains('translate-y-full')) {
      openMenu();
    } else {
      closeMenu();
    }
  });

  overlay?.addEventListener('click', closeMenu); // Cierra al hacer clic fuera
  mobileMenuLinks.forEach(link => {
    link.addEventListener('click', closeMenu); // Cierra al hacer clic en un enlace
  });

  // Estado inicial al cargar la página
  window.addEventListener('load', handleScroll); // Usamos 'load' para asegurar que las alturas de las secciones son correctas
</script>
<style>
  /* Header y menú sin fondo ni borde */
  .glassmorphism-lang {
    background: linear-gradient(90deg, #ffe082cc 0%, #fffde7cc 100%);
    box-shadow: 0 2px 8px 0 rgba(255, 215, 64, 0.10);
    border: 1px solid #ffe08244;
    transition: background 0.3s, box-shadow 0.3s, transform 0.2s;
  }
  .menu-link {
    position: relative;
    outline: none;
    background: none !important;
    border: 2px solid transparent;
    box-shadow: none !important;
    color: #fff;
    cursor: pointer;
    overflow: hidden;
    text-shadow: 0 2px 12px rgba(0,0,0,0.55), 0 1px 2px rgba(0,0,0,0.25);
    letter-spacing: 0.01em;
    border-radius: 0.7em;
    transition: color 0.2s;
  }
  .menu-link::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 0.7em;
    border: 2px solid #ffe082;
    background: rgba(255, 224, 130, 0.32);
    box-shadow: 0 2px 16px 0 rgba(255, 224, 130, 0.18);
    opacity: 0;
    transform: scale(0.7,0.7);
    transition: opacity 0.25s, transform 0.35s cubic-bezier(.4,0,.2,1);
    pointer-events: none;
    z-index: 0;
  }
  .menu-link:hover::before,
  .menu-link:focus::before,
  .menu-link.active::before {
    opacity: 1;
    transform: scale(1,1);
  }
  .menu-link:hover,
  .menu-link:focus,
  .menu-link.active {
    color: #a67c00 !important;
    text-shadow: 0 2px 12px rgba(0,0,0,0.55), 0 1px 2px rgba(0,0,0,0.25);
    z-index: 1;
  }
  #lang-toggle-desktop:hover,
  #lang-toggle-mobile:hover {
    color: #d2a530 !important;
  }
  #lang-toggle-desktop:hover .material-symbols-outlined,
  #lang-toggle-mobile:hover .material-symbols-outlined {
    color: #d2a530 !important;
  }
</style>