---
// Dynamic tour page in English
import Baselayout from '../../../layouts/Baselayout.astro';

export async function getStaticPaths() {
  const tours = (await import('../../../data/tours.en.json')).default;
  return tours.map(tour => ({ params: { slug: tour.slug } }));
}

const { slug } = Astro.params;
const tours = (await import('../../../data/tours.en.json')).default;

let tour = tours.find(t => t.slug === slug);
// Si no tiene 'images' pero s√≠ 'image', crear array 'images' con la imagen √∫nica
if (tour && !tour.images && tour.image) {
  tour = {
    ...tour,
    images: [tour.image],
    itinerary: tour.itinerary || [],
    not_included: tour.not_included || [],
    recommendations: tour.recommendations || []
  };
}

if (!tour) {
  throw new Error('Tour not found');
}

// SEO and lang for layout
const lang = 'en';
const seo = {
  title: `${tour.name} | Cusco Agency`,
  description: tour.description,
  hreflangs: [
    { lang: 'es', url: `/es/tours/${slug}` },
    { lang: 'en', url: `/tours/${slug}` }
  ]
};
---
<Baselayout lang={lang} seo={seo}>
  <section class="max-w-3xl mx-auto py-10 px-4">
    {tour.images && tour.images.length > 0 && (
      <div class="mb-8">
        {tour.images.length >= 4 ? (
          <>
            {/* Desktop: collage grid */}
            <div class="hidden md:grid grid-cols-2 gap-2 md:grid-cols-4 masonry-grid">
              <div class="col-span-2 row-span-2">
                <img src={tour.images[0]} alt={tour.name + ' 1'} class="rounded-xl w-full h-64 object-cover" loading="lazy" />
              </div>
              <div>
                <img src={tour.images[1]} alt={tour.name + ' 2'} class="rounded-xl w-full h-32 object-cover" loading="lazy" />
              </div>
              <div>
                <img src={tour.images[2]} alt={tour.name + ' 3'} class="rounded-xl w-full h-32 object-cover" loading="lazy" />
              </div>
              <div class="col-span-2">
                <img src={tour.images[3]} alt={tour.name + ' 4'} class="rounded-xl w-full h-40 object-cover" loading="lazy" />
              </div>
            </div>
            {/* Mobile: main image + thumbnails (pure JS, accessible, clean) */}
            <div class="md:hidden flex flex-col items-center">
              <img id="mainTourImg" src={tour.images[0]} alt={tour.name + ' main'} class="rounded-xl w-full h-56 object-cover mb-2 transition-all duration-300" loading="lazy" />
              <div id="miniCarousel" class="flex gap-2 justify-start mt-2 overflow-x-auto w-full pb-2" style="scrollbar-width: none; -ms-overflow-style: none;">
                {tour.images.map((img, idx) => (
                  <img
                    src={img}
                    alt={tour.name + ' thumbnail ' + (idx+1)}
                    class="rounded-lg w-16 h-16 object-cover border-2 border-transparent cursor-pointer transition-all duration-200 flex-shrink-0"
                    aria-label={`View image ${idx+1} of ${tour.images.length}`}
                    tabindex={0}
                    style={idx === 0 ? 'border-color:#d2a530' : 'border-color:transparent'}
                    loading="lazy"
                    onclick={`
                      var mainImg = document.getElementById('mainTourImg');
                      if(mainImg) mainImg.src='${img}';
                      Array.from(this.parentNode.children).forEach(el=>el.style.borderColor='transparent');
                      this.style.borderColor='#d2a530';
                      // Center active thumbnail in carousel
                      const carousel = document.getElementById('miniCarousel');
                      if(carousel){
                        const rect = this.getBoundingClientRect();
                        const crect = carousel.getBoundingClientRect();
                        carousel.scrollBy({
                          left: rect.left - crect.left - crect.width/2 + rect.width/2,
                          behavior: 'smooth'
                        });
                      }
                    `}
                    onkeydown={`if(event.key==='Enter'||event.key===' '){this.click();}`}
                  />
                ))}
              </div>
            </div>
          </>
        ) : (
          <>
            {/* Desktop y m√≥vil: solo una imagen grande */}
            <div class="flex flex-col items-center">
              <img src={tour.images[0]} alt={tour.name} class="rounded-xl w-full h-64 object-cover mb-2 transition-all duration-300" loading="lazy" />
            </div>
          </>
        )}
      </div>
    )}
    <div class="flex flex-col md:flex-row gap-8 items-center md:items-start">
      <div class="flex-1">
        <h1 class="text-3xl md:text-4xl font-extrabold text-[#b64926] mb-2">{tour.name}</h1>
        <span class="inline-block bg-[#d2a530] text-white px-3 py-1 rounded-lg font-bold text-lg mb-2">${tour.price}</span>
        <p class="text-[#372212] text-lg mb-4">{tour.description}</p>
        <div class="mb-4 flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-[#b64926]" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 10c-4.41 0-8-1.79-8-4V6c0-2.21 3.59-4 8-4s8 1.79 8 4v8c0 2.21-3.59 4-8 4z" /></svg>
          <span class="font-semibold text-[#b64926]">Duration:</span> {tour.duration}
        </div>
        {tour.itinerary && (
          <div class="mb-4">
            <div class="flex items-center gap-2 mb-1">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-[#b64926]" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2a4 4 0 014-4h4m0 0V7m0 4l-4-4-4 4" /></svg>
              <span class="font-semibold text-[#b64926]">Itinerary:</span>
            </div>
            <ul class="list-decimal list-inside text-[#372212]">
              {tour.itinerary.map(day => (
                <li class="mb-1">
                  <span class="font-bold">{day.day}:</span> <span class="italic">{day.title}</span> ‚Äì {day.description}
                </li>
              ))}
            </ul>
          </div>
        )}
        <div class="mb-4">
          <div class="flex items-center gap-2 mb-1">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-[#b64926]" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" /></svg>
            <span class="font-semibold text-[#b64926]">Includes:</span>
          </div>
          <ul class="list-disc list-inside text-[#372212]">
            {tour.includes.map(item => <li>‚úÖ {item}</li>)}
          </ul>
        </div>
        {tour.not_included && (
          <div class="mb-4">
            <div class="flex items-center gap-2 mb-1">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-[#b64926]" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>
              <span class="font-semibold text-[#b64926]">Not included:</span>
            </div>
            <ul class="list-disc list-inside text-[#372212]">
              {tour.not_included.map(item => <li>‚ùå {item}</li>)}
            </ul>
          </div>
        )}
        {tour.recommendations && (
          <div class="mb-4">
            <div class="flex items-center gap-2 mb-1">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-[#b64926]" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M12 20c4.418 0 8-1.79 8-4V6c0-2.21-3.582-4-8-4S4 3.79 4 6v10c0 2.21 3.582 4 8 4z" /></svg>
              <span class="font-semibold text-[#b64926]">Recommendations:</span>
            </div>
            <ul class="list-disc list-inside text-[#372212]">
              {tour.recommendations.map(item => <li>üí° {item}</li>)}
            </ul>
          </div>
        )}
        <div class="flex gap-4 mt-4">
          <a href="/tours" class="text-[#b64926] underline hover:text-[#d2a530]">‚Üê Back to tours</a>
        </div>
      </div>
    </div>
  </section>
</Baselayout>

